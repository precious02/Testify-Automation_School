{
	"info": {
		"_postman_id": "5b34c94e-174a-4607-8276-86a5bfd500dd",
		"name": "API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18063899"
	},
	"item": [
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status code is 200 OK', function () {\r",
							"     pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"postman.setNextRequest('Place a book order')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/status",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that non-fiction is 200 OK', function () {\r",
							"     pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Verify the id number of a non-fiction book with the name Untamed', function () {\r",
							"    const responseData = pm.response.json()\r",
							"    const bookId = responseData[4].id\r",
							"\r",
							"    pm.expect(bookId).to.equal(5)\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register an API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Preshyyyy\",\r\n   \"clientEmail\": \"preshyyyy@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api-clients/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status code is 200 OK', function () {\r",
							"     pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/books/5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"5"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Place a book order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status Code is 201 Created', function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.environment.set('id', 3);\r",
							"\r",
							"\r",
							"postman.setNextRequest('null')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Token",
						"value": "03c5abfe090876ab74a2a2ac4c079174a35fd88c9b88cd2164ff4b9d56c31d6c",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": {{id}},\r\n  \"customerName\": \"Peterson\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status code is 200', function () {\r",
							"     pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status code is 200', function () {\r",
							"     pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesstoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/JkFgUeSJlcWTxdzwfk144",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"JkFgUeSJlcWTxdzwfk144"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"Preshyy\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/2PuYDvt-mlznQ1bJ5DZE9",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"2PuYDvt-mlznQ1bJ5DZE9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify that Status code is 204 No Content', function () {\r",
							"     pm.response.to.have.status(204);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/5cNLgN47drcs5YMW-zLPt",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"5cNLgN47drcs5YMW-zLPt"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accesstoken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accesstoken",
			"value": "9cf7b33c611840fad15824c1b3d20c7893ae9f7016bf9a161f5389d0483a44b3",
			"type": "string"
		}
	]
}